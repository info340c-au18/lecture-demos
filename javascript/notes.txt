poll everywhere
slides
get lecture repo

terminal to the lecture directory
live-server

bring up the developer tools in chrome, console

Slide 2
Feedback from you guys on the course
Functional programming lecture
Worktime

Slide 3
What we've done so far

Slide 4
Poll everywhere

Issues from other class session:
- Will we be learning how to use an API to get real time info for our website? Yes
- How much will we be using jQuery? We'll discuss it, but it's not really necessary anymore
- Can you discuss efficiency of loops? 
We don't care as much about optimizing for efficiency in this class when weighed against readability and maintainability. Saving a 
nono-second isn't worth it.

Slide 5
Do you recognize and understand how we declare functions and call them?

Slide 6
Functions are values
A function is like any other value you declare. 


Slide 7
You can use a function anywhere you can use an array
For arrays the '[]' is the super power
For functions the '()' is the super power

Example - we create an array and can assign that array to another vairable

Side by side with essentially the same process but with a function.

Slide 8
Anonomous Variables - Passing a literal.
If we don't include a name, it's an anonmous function.

Example of an array first being passed by variable, then an anonomous (literal) array being passed to console.log

Underneath the same example with first a function "sayHello()" being created anonomously, then showing how an anonmous function can be assigned.

The first example is not really valid. There's no way to access that function because there's no name. It'd be the same as writing 
[1,2,3]; as a line of code.

There is one difference when declaring functions vs assigning an anonmous function to a variable. 
Hoisting.
Declared functions get hoisted before code progresses. Assigned functions don't until they are assigned. So you must assign before calling 
otherwise the runtime environment won't know what the function is and will error out.

Use the example from the lecture notes

Slide 9
Functions can be assigned to properties in Objects

If you apply static keyword with any method, it is known as static method. A static method belongs to the class rather than object of a class. 
A static method invoked without the need for creating an instance of a class. static method can access static data member and can change the 
value of it.

Slide 10
Functions are Objects
Which means they can be passed as parameters to other functions

Side by side - on left shows passing in an array
on right shows passing a function

Things of note:
- between the '()' note that we still don't declare that the paramter is an array or function in javascript. the code within the function
determines the type
- the more common way to do this is to pass an anonomous function in javascript. 

This is how we end up with the }); 

the '}' is the closing bracket to the anonmous function. the ')' is the parenthisis for the calling function. then the ;

Slide 11
Passing vs calling

Don't put the '()' when passing function as a parameters

This will instead pass the value of the function rather than the function. You'll get an error if the function expects a function.


Slide 12
Callback Functions
We call these things "callback" functions. 


Slide 13
Array Iteration

array.forEach(callback)




More common to use a callback in the ForEach()






Slide 14
Mapping





returns new array







Slide 15
Filtering



returns new array







Slide 16
Reducing










